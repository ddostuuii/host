from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes

TOKEN = "7204456254:AAG_E_SfVryRcmYcgbRIqk5zE56RPYU1OTU"
CHANNEL_USERNAME = "@seedhe_maut"  # рдЕрдкрдиреЗ рдЪреИрдирд▓ рдХрд╛ рдпреВрдЬрд░рдиреЗрдо рдбрд╛рд▓реЗрдВ (рдЬреИрд╕реЗ @seedhe_maut)
CHANNEL_ID = None  # рдЪреИрдирд▓ ID рдСрдЯреЛрдореИрдЯрд┐рдХрд▓реА рдирд┐рдХрд╛рд▓реА рдЬрд╛рдПрдЧреА

# рдЪреИрдирд▓ рдХреА ID рдирд┐рдХрд╛рд▓рдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди
async def get_channel_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global CHANNEL_ID
    chat = await context.bot.get_chat(CHANNEL_USERNAME)
    CHANNEL_ID = chat.id
    await update.message.reply_text(f"тЬЕ Channel ID: `{CHANNEL_ID}`", parse_mode="Markdown")

# рдЪреИрдирд▓ рдЬреЙрдЗрди рдЪреЗрдХ рдХрд░рдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди
async def is_user_joined(update: Update) -> bool:
    if CHANNEL_ID is None:
        return False  # рдЕрдЧрд░ рдЪреИрдирд▓ ID рдирд╣реАрдВ рдорд┐рд▓реА рддреЛ False рднреЗрдЬреЛ

    user_id = update.message.from_user.id
    try:
        chat_member = await update.message.bot.get_chat_member(CHANNEL_ID, user_id)
        return chat_member.status in ["member", "administrator", "creator"]
    except:
        return False

# рд╕реНрдЯрд╛рд░реНрдЯ рдХрдорд╛рдВрдб
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("ЁЯФЧ Join Channel", url=f"https://t.me/{CHANNEL_USERNAME}")],
        [InlineKeyboardButton("тЬЕ рдореИрдВрдиреЗ рдЬреЙрдЗрди рдХрд░ рд▓рд┐рдпрд╛", callback_data="check_join")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if not await is_user_joined(update):
        await update.message.reply_text(
            "ЁЯЪА рдкрд╣рд▓реЗ рд╣рдорд╛рд░реЗ рдЪреИрдирд▓ рд╕реЗ рдЬреБрдбрд╝реЗрдВ рддрд╛рдХрд┐ рдмреЙрдЯ рдХрд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░ рд╕рдХреЗрдВ!",
            reply_markup=reply_markup
        )
        return

    await update.message.reply_text("ЁЯОЙ рдмреЙрдЯ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЕрдм рдЖрдк рдХрдорд╛рдВрдб рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред")

# "тЬЕ рдореИрдВрдиреЗ рдЬреЙрдЗрди рдХрд░ рд▓рд┐рдпрд╛" рдмрдЯрди рдХрд╛ рд╣реИрдВрдбрд▓рд░
async def check_join(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    try:
        chat_member = await context.bot.get_chat_member(CHANNEL_ID, user_id)
        if chat_member.status in ["member", "administrator", "creator"]:
            await query.answer("тЬЕ рдЖрдкрдиреЗ рдЪреИрдирд▓ рдЬреЙрдЗрди рдХрд░ рд▓рд┐рдпрд╛ рд╣реИ!", show_alert=True)
            await query.message.edit_text("ЁЯОЙ рдмреЙрдЯ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЕрдм рдЖрдк рдХрдорд╛рдВрдб рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред")
        else:
            await query.answer("ЁЯЪл рдкрд╣рд▓реЗ рдЪреИрдирд▓ рдЬреЙрдЗрди рдХрд░реЗрдВ!", show_alert=True)
    except:
        await query.answer("ЁЯЪл рдкрд╣рд▓реЗ рдЪреИрдирд▓ рдЬреЙрдЗрди рдХрд░реЗрдВ!", show_alert=True)

# рдмреЙрдЯ рд╕реНрдЯрд╛рд░реНрдЯ рдлрдВрдХреНрд╢рди
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("getid", get_channel_id))  # тЬЕ рдпрд╣ рдХрдорд╛рдВрдб рдЪреИрдирд▓ рдХреА ID рдирд┐рдХрд╛рд▓реЗрдЧрд╛
    app.add_handler(CallbackQueryHandler(check_join, pattern="check_join"))

    app.run_polling()

if __name__ == "__main__":
    main()
